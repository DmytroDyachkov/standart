function tab2s(){$(".js-tab__open").click(function(){if($(this).hasClass("active"));else{$(".js-tab__open").removeClass("active"),$(this).addClass("active"),$(".js-tab__content").slideUp(300);var e=$(this).attr("data-monolit-tabs");$(".js-tab__content").each(function(){$(this).attr("data-monolit-tabs")==e&&$(this).slideDown(300)})}})}var myMap,boxVisible;function mapsInit(){var e=document.querySelector(".js-map-frame");myMap=new ymaps.Map(e,{center:[55.75399399999374,37.62209300000001],controls:["zoomControl"],zoom:10},{yandexMapDisablePoiInteractivity:!0,suppressMapOpenBlock:!0});var s=document.getElementById("js-map-templates");boxVisible=document.querySelector(".js-map-object");var i=20,n=20,t=JSON.parse(window.deliveryZone),a=new ymaps.Polygon([t],{},{fillColor:"rgba(42, 45, 50, 0.1)",strokeWidth:3,strokeColor:"#007BFB"});myMap.geoObjects.add(a),mapdata.forEach(function(e){if(document.querySelector(".js-mapdata")){if(document.querySelector(".js-mapdata-green").classList.contains("active")&&1==e.isViolet)return;if(document.querySelector(".js-mapdata-purpur").classList.contains("active")&&0==e.isViolet)return;document.querySelector(".js-mapdata-all").classList.contains("active")}var t=new ymaps.Placemark([e.lat,e.lng],{balloonContent:null,iconCaption:null,blockId:e.id},{iconLayout:"default#image",iconImageHref:e.isViolet?mapmarkerActive:mapmarker,iconImageSize:[i,n],iconImageOffset:[-10,-n],hideIconOnBalloonOpen:!1});t.events.add("click",function(e){myMap.geoObjects.each(function(e){e.options.set({iconImageSize:[i,n],iconImageOffset:[-10,-n]})}),boxVisible.innerHTML="";var t=e.get("target").properties.get("blockId");e.get("target").options.set({iconImageSize:[25,25],iconImageOffset:[-12.5,-25]});var a=s.content.querySelector(".js-maploc-"+t).cloneNode(!0);boxVisible.append(a),setTimeout(function(){a.classList.add("is-active")},0)}),myMap.geoObjects.add(t)}),window.innerWidth,myMap.behaviors.disable(["rightMouseButtonMagnifier","scrollZoom"])}function loadYamaps(){if(document.querySelector(".js-map-frame")){var e=document.createElement("script");window.mapsInit=mapsInit,e.className="js-reload-remove",e.src="https://api-maps.yandex.ru/2.1/?load=package.map&lang=ru-RU&onload=mapsInit",document.getElementsByTagName("body")[0].appendChild(e)}}function reloadYamaps(){console.log(1),document.querySelector(".js-active-map_items").classList.contains("active")?console.log(2):(myMap.destroy(),document.querySelector(".js-reload-remove").remove(),loadYamaps(),console.log(3))}$(function(){var e;if($(".js-modal_btn_close,.js-modal_close,.js-close_btn,.js-btnCloseModal").click(function(){$(".js-modal_window").fadeOut(),$(".js-menu-item").removeClass("active"),$("body,head,html").css("overflow-x","hidden"),$("body,head,html").css("overflow-y","auto"),$(".menu-item-close").removeClass("active"),$(".menu-item-close").removeClass("menu-item-close--white")}),$(".js-open_modal").click(function(){var e=$(this).attr("data-monolit-modal");$(".js-modal_window").each(function(){$(this).attr("data-monolit-modal")==e&&($("body,head,html").css("overflow","hidden"),$(this).fadeIn(),$(".menu-item-close").addClass("active"),$(".menu-item-close").addClass("menu-item-close--white"))})}),$(".js-close_menu").click(function(){$("[data-click-state='0']").attr("data-click-state","1"),$(this).removeClass("active"),$(".js-menu-item").removeClass("menu-active"),$(".js-modal_window").fadeOut(),$(".menu-item-close").removeClass("active"),$("body,head,html").css("overflow-x","hidden"),$("body,head,html").css("overflow-y","auto"),$(".menu-item-close").removeClass("menu-item-close--white")}),$(".js-open_menu").click(function(){if(1==$(this).attr("data-click-state")){$(this).attr("data-click-state",0),$(this).addClass("active");var e=$(this).attr("data-monolit-menu");$(".js-menu-item").each(function(){$(this).attr("data-monolit-menu")==e&&($(this).addClass("menu-active"),$(".menu-item-close").addClass("active"),$("body,head,html").css("overflow","hidden"),$(".menu-item-close").removeClass("menu-item-close--white"))})}else $(this).attr("data-click-state",1),$(this).addClass("open-block"),$(this).removeClass("active"),$(".js-menu-item").removeClass("menu-active"),$(".js-modal_window").fadeOut(),$(".menu-item-close").removeClass("active"),$("body,head,html").css("overflow-x","hidden"),$("body,head,html").css("overflow-y","auto"),$(".menu-item-close").removeClass("menu-item-close--white")}),$(".js-scale__open, .js-scale__if").click(function(){var e=$(this);if(e.hasClass("active"));else{$(".js-scale__open").removeClass("active"),e.addClass("active"),$(".js-scale__content").fadeOut(0);var t=$(".js-scale__open.active").attr("data-monolit-scale");if("all"==t)return void $(".js-scale__content").fadeIn(0);$(".js-scale__content").each(function(){$(this).attr("data-monolit-scale")==t&&$(this).fadeIn(0)})}}),window.onscroll=function(){1<(e=window.pageYOffset||document.documentElement.scrollTop)&&$(".header").addClass("scroll"),e<1&&$(".header").removeClass("scroll")},$(".fancybox-media,.content_wp a:has(img)").fancybox({openEffect:"none",closeEffect:"none",maxWidth:"100%",maxHeight:"auto",padding:0,margin:0,helpers:{media:{youtube:{params:{theme:"light",vq:"hd720",css:{body:"color: #fff"}}}}}}),$(".js-open-close").click(function(){1==$(this).parents(".js-open-close-item").attr("data-click-state")?($(this).parents(".js-open-close-item").attr("data-click-state",0),$(this).parents(".js-open-close-item").removeClass("active"),$(this).parents(".js-open-close-item").find(".js-item__desc").slideUp(),$(this).find(".btn-open-close__text").html($(this).attr("data-open-text"))):($(this).parents(".js-open-close-item").attr("data-click-state",1),$(this).parents(".js-open-close-item").addClass("active"),$(this).parents(".js-open-close-item").find(".js-item__desc").slideDown(),$(this).find(".btn-open-close__text").html($(this).attr("data-close-text")))}),0<$(".carousel-init--hero").length)new Swiper(".carousel-init--hero",{spaceBetween:0,grabCursor:!0,centeredSlides:!0,slidesPerView:"auto",loop:!0,fade:!0,effect:"fade",fadeEffect:{crossFade:!0},virtualTranslate:!0,slidesPerGroup:1,autoHeight:!0,navigation:{nextEl:".slick-m-next--hero",prevEl:".slick-m-prev--hero"},pagination:{el:".slick-dots--hero",type:"bullets"}});if(0<$(".carousel-init--services").length)new Swiper(".carousel-init--services",{autoHeight:!0,loop:!1,spaceBetween:10,slidesPerView:"auto",centeredSlides:!1,navigation:{nextEl:".slick-m-next--services",prevEl:".slick-m-prev--services"},breakpoints:{0:{spaceBetween:10},800:{spaceBetween:10}}});if(0<$(".carousel-init--discount").length)new Swiper(".carousel-init--discount",{autoHeight:!0,loop:!1,spaceBetween:40,slidesPerView:2,centeredSlides:!1,navigation:{nextEl:".slick-m-next--discount",prevEl:".slick-m-prev--discount"},breakpoints:{0:{slidesPerView:1},800:{slidesPerView:2}},pagination:{el:".slick-dots--discount",type:"bullets"}});if(0<$(".carousel-init--reviews").length)new Swiper(".carousel-init--reviews",{autoHeight:!0,loop:!1,spaceBetween:40,slidesPerView:2,centeredSlides:!1,navigation:{nextEl:".slick-m-next--reviews",prevEl:".slick-m-prev--reviews"},breakpoints:{0:{slidesPerView:1},1140:{slidesPerView:2}},pagination:{el:".slick-dots--reviews",type:"bullets"}});function t(e,t){e.addClass("carousel-init carousel-init--"+t+" swiper-container"),e.find(">*").each(function(){$(this).wrap('<div class="swiper-slide carousel-item"></div>')}),e.wrapInner('<div class="swiper-wrapper"></div>')}if($(document).width()<1140&&($(".hero__item__right").appendTo($(".hero")),$(".menu li.menu__item--back").each(function(){$(this).find("a").first().addClass("parent__arrow"),$(this).find("a").first().removeAttr("href")}),$(".menu__item").on("click",".parent",function(){$(this).addClass("active__child")}),$(".menu__item--back").click(function(){$(this).parent("ul").parent("li").find(".parent").removeClass("active__child")})),$(document).width()<800){if($(".cat-list__item--big").wrapAll('<div class="cat-list__item__group">'),$(".js-mob-cat-all__filter-item").appendTo($(".cat-all__filter--mob")),t($(".cat-list__items"),"cart_list"),0<$(".carousel-init--cart_list").length)new Swiper(".carousel-init--cart_list",{autoHeight:!0,loop:!0,spaceBetween:10,slidesPerView:"auto",centeredSlides:!1});if(t($(".map__button__left--mob-slider"),"map__button__left"),0<$(".carousel-init--map__button__left").length)new Swiper(".carousel-init--map__button__left",{autoHeight:!1,loop:!1,spaceBetween:10,slidesPerView:"auto",centeredSlides:!1});$(".menu li").each(function(){0<$(this).find("ul").length&&($(this).find("a").first().addClass("parent parent__arrow"),$(this).find("a").first().removeAttr("href"))})}if(801<$(document).width()&&$(".menu li").each(function(){0<$(this).find("ul").length&&$(this).find("a").first().addClass("parent parent__arrow")}),$(document).width()<1140&&(t($(".cat-all__tabs"),"cat-all__tabs"),0<$(".carousel-init--cat-all__tabs").length))new Swiper(".carousel-init--cat-all__tabs",{autoHeight:!0,loop:!1,spaceBetween:10,slidesPerView:"auto",centeredSlides:!1});var a=window.location.href;$("ul li").each(function(){var e=$(this).find("a").first().attr("href");a==e&&($(this).addClass("active"),$(this).find("a").first().removeAttr("href"),$(this).parents("li").addClass("active"))}),$(".burger").on("click",function(){1==$(this).attr("data-click-state")?$(this).attr("data-click-state",0):$(this).attr("data-click-state",1),$(this).parents(".header").toggleClass("active")}),800<$(document).width()&&($(".page__content-wrapper").theiaStickySidebar({additionalMarginTop:120,additionalMarginBottom:0}),$(".page__sidebar-wrapper").theiaStickySidebar({additionalMarginTop:120,additionalMarginBottom:0})),$('.scroll[href^="#"]').click(function(){return $("html, body").animate({scrollTop:$($(this).attr("href")).offset().top},{duration:600,easing:"swing"}),!1}),$(".quantity_inner .bt_minus").click(function(){var e=$(this).parent().find(".quantity"),t=(e.attr("data-sep"),parseInt(e.val())-1);t=t<1?1:t,e.val(t),e.attr("data-count",parseInt(t))}),$(".quantity_inner .bt_plus").click(function(){var e=$(this).parent().find(".quantity"),t=(e.attr("data-sep"),parseInt(e.val())+1);t=t>parseInt(e.data("max-count"))?parseInt(e.data("max-count")):t,e.val(parseInt(t)),e.attr("data-count",parseInt(t))}),$(".quantity_inner .quantity").bind("change keyupel_input click",function(){this.value.match(/[^0-9]/g)&&(this.value=this.value.replace(/[^0-9]/g,"")),""==this.value&&(this.value=1),this.value>parseInt($(this).data("max-count"))&&(this.value=parseInt($(this).data("max-count")))}),tippy(".tippy-message",{animation:"fade",theme:"light",allowHTML:!0,interactive:!0,content:function(e){return $(e).find(".js-tippycont").html()}}),$(".js-tel").inputmask({mask:"+7 (999) 999-99-99",greedy:!0,clearMaskOnLostFocus:!0,clearIncomplete:!0}),$(".js-select").each(function(){var e=$(this),t=e.find("option"),a=t.length,s=(t.filter(":selected"),'<span class="select-prev">'+e.attr("data-prev")+" </span>");e.hide(),e.wrap('<div class="select"></div>'),$("<div>",{class:"new-select",text:e.children("option:disabled").text()}).insertAfter(e);var i=e.next(".new-select");$("<div>",{class:"new-select__list"}).insertAfter(i);var n=i.next(".new-select__list");$("<div>",{class:"new-select__item new-select__item--back js-closed-select parent__arrow",html:$("<span>",{text:t.eq(0).html()})}).attr("data-value",t.eq(0).val()).appendTo(n),$(n).find(".new-select__item--back").prepend(s);for(var o=1;o<a;o++)$("<div>",{class:"new-select__item",html:$("<span>",{text:t.eq(o).text()})}).attr("data-value",t.eq(o).val()).appendTo(n);var l=n.find(".new-select__item");i.on("click",function(){if($(this).hasClass("on"))$(this).removeClass("on");else{var t=$(this);t.addClass("on"),$(document).width()<800&&$("body,head,html").css("overflow-y","hidden"),l.on("click",function(){if($(document).width()<800&&$("body,head,html").css("overflow-y","auto"),$(this).hasClass("new-select__item--back"))t.removeClass("on");else{var e=$(this).data("value");$(this).parents(".new-select__list").find(".new-select__item").removeClass("active"),$(this).addClass("active"),$(this).parents(".select").find(".new-select").addClass("selected"),$("select").val(e).attr("selected","selected"),i.html(s+$(this).find("span").text()),i.removeClass("on")}})}})}),$(document).mouseup(function(e){var t=$(".select");t.is(e.target)||0!==t.has(e.target).length||$(".new-select").removeClass("on")}),$(".js-mapdata").click(function(){$(".js-mapdata").removeClass("active"),$(this).addClass("active")}),$("body").on("click",".remove",function(){$(".js-map-object .maploc").removeClass("is-active")})}),tab2s(),loadYamaps(),$(".js-active-map").click(function(){reloadYamaps()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
